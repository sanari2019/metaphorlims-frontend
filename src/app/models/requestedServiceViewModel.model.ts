export interface RequestedServiceViewModel {
    samplePerServiceId: number;
    sampleTypeId: number;
    sampleNo: number;
    sampleServiceId: number;
    sampleDepartmentId: number;
    collectionSiteId: number;
    referalTypeId: number;
    referredBy: string;
    sampleRemarks: string;
    labTechnician: number;
    labSupervisor: number;
    labDoctor: number;
    sampleStatusId: number;
    stageId: number;
    sampleHistoNo: number;
    sampleEncodedBy: number;
    sampleEncodedDate: Date;
    sampleLastChangedBy: number;
    sampleLastChangeDate: Date;
    samplePatientId: number;
    sampleUlid: number;
    clinicalRemarks: string;
    provisionalResultDate: Date;
    provisionalResultReleasedBy: number;
    reportTypeId: number;
    finalRemarks: string;
    printStatus: boolean;
    printLabelSatus: boolean;
    testDateTime: Date;
    redoDiagSampleId: boolean;
    isRedone: boolean;
    sampleLocation: string;
    employeeTypePhase: number;
    sampleIsHistoFilled: boolean;
    serviceName: string;
    stageType: string;
    stage: string;
    statusType: string;
    status: string;
    statusColor: string;
    histoSampleId: number;
    histoHistoNo: number;
    histoSampleNo: number;
    histoServiceId: number;
    requisitionType: string;
    specimenType: string;
    specimenSite: string;
    previousBiopsy: boolean;
    sutureTag: string;
    clinicalDetails: string;
    operativeFindings: string;
    provisionalDiagnosis: string;
    investigationRequested: string;
    sampleGrossingPerformed: boolean;
    sampleGrossingPerformedBy: number;
    sampleGrossingPerformedDate: Date;
    tissueProcessingPerformed: boolean;
    tissueProcessingPerformedBy: number;
    tissueProcessingPerformedDate: Date;
    embeddingPerformed: boolean;
    embeddingPerformedBy: number;
    embeddingPerformedDate: Date;
    microtomyPerformed: boolean;
    microtomyPerformedBy: number;
    microtomyPerformedDate: Date;
    stainingPerformed: boolean;
    stainingPerformedBy: number;
    stainingPerformedDate: Date;
    sampleDetailId: number;
    sampleDetailSampleNo: number;
    sampleCollected: boolean;
    collectedBy: number;
    collectedDate: Date;
    sampleAcknowledged: boolean;
    acknowledgedBy: number;
    acknowledgedDate: Date;
    sampleDispatched: boolean;
    dispatchedBy: number;
    dispatchDate: Date;
    cancelled: boolean;
    cancelledBy: number;
    cancellationReason: string;
    sampleDetailRemarks: string;
    active: boolean;
    sampleDetailEncodedBy: number;
    isSelected: boolean;
    firstName: string;
    lastName: string;
    age: number;
    gender: string;

}